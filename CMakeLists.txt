cmake_minimum_required(VERSION 3.5)
project(plc)

include_directories("./inc/")
include_directories("/usr/include/glib-2.0")

IF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm")
include_directories("/usr/lib/arm-linux-gnueabihf/glib-2.0/include/")
ELSE(${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm")
include_directories("/usr/lib/x86_64-linux-gnu/glib-2.0/include/")
ENDIF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm")

set(CMAKE_C_COMPILER clang)
set(CMAKE_C_STANDARD 11)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pedantic -Wall -Werror -O2")

set(SRC_LIST ${SRC_LIST} src/utils/log.c)
set(SRC_LIST ${SRC_LIST} src/utils/utils.c)
set(SRC_LIST ${SRC_LIST} src/utils/configs/configs.c)
set(SRC_LIST ${SRC_LIST} src/utils/configs/cfgsecurity.c)
set(SRC_LIST ${SRC_LIST} src/utils/configs/cfgmeteo.c)
set(SRC_LIST ${SRC_LIST} src/utils/configs/cfgsocket.c)
set(SRC_LIST ${SRC_LIST} src/utils/configs/cfgtank.c)
set(SRC_LIST ${SRC_LIST} src/utils/configs/cfgwaterer.c)
set(SRC_LIST ${SRC_LIST} src/net/web/response.c)
set(SRC_LIST ${SRC_LIST} src/net/web/webserver.c)
set(SRC_LIST ${SRC_LIST} src/net/notifier.c)
set(SRC_LIST ${SRC_LIST} src/net/web/handlers/securityh.c)
set(SRC_LIST ${SRC_LIST} src/net/web/handlers/meteoh.c)
set(SRC_LIST ${SRC_LIST} src/net/web/handlers/indexh.c)
set(SRC_LIST ${SRC_LIST} src/net/web/handlers/socketh.c)
set(SRC_LIST ${SRC_LIST} src/net/web/handlers/tankh.c)
set(SRC_LIST ${SRC_LIST} src/net/web/handlers/watererh.c)
set(SRC_LIST ${SRC_LIST} src/net/web/webclient.c)
set(SRC_LIST ${SRC_LIST} src/net/tgbot/tgbot.c)
set(SRC_LIST ${SRC_LIST} src/net/tgbot/tgresp.c)
set(SRC_LIST ${SRC_LIST} src/net/tgbot/tgmenu.c)
set(SRC_LIST ${SRC_LIST} src/net/tgbot/handlers/tgtank.c)
set(SRC_LIST ${SRC_LIST} src/net/tgbot/handlers/tgsocket.c)
set(SRC_LIST ${SRC_LIST} src/net/tgbot/handlers/tgsecurity.c)
set(SRC_LIST ${SRC_LIST} src/net/tgbot/handlers/tgmeteo.c)
set(SRC_LIST ${SRC_LIST} src/net/tgbot/handlers/tgcam.c)
set(SRC_LIST ${SRC_LIST} src/net/tgbot/handlers/tgmain.c)
set(SRC_LIST ${SRC_LIST} src/net/tgbot/handlers/tgwaterer.c)
set(SRC_LIST ${SRC_LIST} src/scenario/scenario.c)
set(SRC_LIST ${SRC_LIST} src/db/database.c)
set(SRC_LIST ${SRC_LIST} src/db/dbloader.c)
set(SRC_LIST ${SRC_LIST} src/core/gpio.c)
set(SRC_LIST ${SRC_LIST} src/core/lcd.c)
set(SRC_LIST ${SRC_LIST} src/cam/camera.c)
set(SRC_LIST ${SRC_LIST} src/core/extenders.c)
set(SRC_LIST ${SRC_LIST} src/core/onewire.c)
set(SRC_LIST ${SRC_LIST} src/controllers/controllers.c)
set(SRC_LIST ${SRC_LIST} src/controllers/security.c)
set(SRC_LIST ${SRC_LIST} src/controllers/meteo.c)
set(SRC_LIST ${SRC_LIST} src/controllers/socket.c)
set(SRC_LIST ${SRC_LIST} src/controllers/tank.c)
set(SRC_LIST ${SRC_LIST} src/controllers/waterer.c)
set(SRC_LIST ${SRC_LIST} src/stack/stack.c)
set(SRC_LIST ${SRC_LIST} src/stack/rpc.c)
set(SRC_LIST ${SRC_LIST} src/ftest/ftest.c)
set(SRC_LIST ${SRC_LIST} src/plc/plc.c)
set(SRC_LIST ${SRC_LIST} src/plc/menu.c)
set(SRC_LIST ${SRC_LIST} src/main.c)

add_executable(${PROJECT_NAME} ${SRC_LIST})
target_link_libraries(${PROJECT_NAME} -lfcgi -ljansson -lcurl -lm -lglib-2.0 -lsqlite3 -pthread)

IF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm") 
target_link_libraries(${PROJECT_NAME} -lwiringPiLite)
ENDIF()